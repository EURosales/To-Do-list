document.getElementById("taskRegisterForm").addEventListener("submit", saveTask); const card = document.querySelector(".card"), cardHeader = document.getElementById("card-task-header"), priorityLevel = document.querySelector(".priority-category"), newTaskBtn = document.querySelector(".new-task"), taskRegister = document.getElementById("taskRegister"), taskViewer = document.querySelector(".task-viewer"), contentTitle = document.querySelector(".title"); function btnText() { "All Tasks" == contentTitle.innerText ? contentTitle.innerText = "New Task" : contentTitle.innerText = "All Tasks", '<i class="fas fa-tasks"></i> View tasks' == newTaskBtn.innerHTML ? newTaskBtn.innerHTML = '<i class="fas fa-plus-circle"></i> New Task' : newTaskBtn.innerHTML = '<i class="fas fa-tasks"></i> View tasks' } newTaskBtn.addEventListener("click", () => { taskRegister.classList.toggle("hide"), taskViewer.classList.toggle("hide"), taskRegister.classList.toggle("test"), btnText() }); let priority, onlyHigh, onlyMid, onlyLittle, highToLow, lowToHigh, selectedOption, rawData = []; function checkSize() { window.screen.width < 1100 && (newTaskBtn.disabled = !1), window.screen.width >= 1100 && (taskRegister.classList.remove("hide"), newTaskBtn.disabled = !0) } function saveTask(e) { e.preventDefault(), location.reload(); let t = getInputVal("taskName"), a = getInputVal("taskDate"), s = getInputVal("taskDescription"), r = document.forms.taskRegisterForm.priority.value; empty(t, a, s, r), card.innerHTML = "", document.getElementById("taskSorter").value = "0" } function getInputVal(e) { return document.getElementById(e).value } byDate = [], window.addEventListener("DOMContentLoaded", () => { checkSize() }), window.addEventListener("resize", () => { checkSize() }), document.getElementById("taskSorter").addEventListener("change", () => { orderTasks(selectedOption = document.getElementById("taskSorter").value) }); let taskRef = firebase.database().ref("Tasks"); function saveData(e, t, a, s) { taskRef.push().set({ taskName: e, taskDate: t, taskDescription: a, priorVal: s }) } let ref = firebase.database().ref("Tasks"); function getData(e) { let t = e.val(), a = Object.keys(t); for (let e = 0; e < a.length; e++) { let s = a[e]; rawData.push(t[s]) } return byDate = rawData.sort((e, t) => e.taskDate < t.taskDate ? -1 : e.taskDate > t.taskDate ? 1 : 0), byDate } function orderTasks(e) { switch (e) { case "0": byDate = rawData.sort((e, t) => e.taskDate < t.taskDate ? -1 : e.taskDate > t.taskDate ? 1 : 0), displayTasks(byDate); break; case "1": displayTasks(highToLow = byDate.sort((e, t) => e.priorVal < t.priorVal ? -1 : e.priorVal > t.priorVal ? 1 : 0)); break; case "2": displayTasks(lowToHigh = byDate.sort((e, t) => t.priorVal < e.priorVal ? -1 : t.priorVal > e.priorVal ? 1 : 0)); break; case "3": displayTasks(onlyHigh = byDate.filter(e => "1" == e.priorVal)); break; case "4": displayTasks(onlyMid = byDate.filter(e => "2" == e.priorVal)); break; case "5": displayTasks(onlyLittle = byDate.filter(e => "3" == e.priorVal)) } } function displayTasks(e) { card.innerHTML = ""; for (let t = 0; t < e.length; t++) { const a = e[t].taskName, s = e[t].taskDate, r = e[t].priorVal, i = e[t].taskDescription; switch (r) { case "1": finalPriority = "Important"; break; case "2": finalPriority = "Medium"; break; case "3": finalPriority = "Little" }card.innerHTML += `\n            <div class="card-task">\n                <div class="card-task-header ${finalPriority}" id="card-task-header">\n                <p class="priority-category">Prioriry: ${finalPriority}</p>\n            </div>\n            <div class="card-task-header-info">\n                <h3 class="card-task-Title">${t + 1}: ${a}</h3>\n                <span class="card-task-date">Due: ${s}</span>\n            </div>\n            <div class="card-task-body-info">\n                <p class="card-description">${i}</p>\n            </div>\n            \x3c!--<div class="card-task-footer">\n                <button class="btn-complete" ><i class="fas fa-check"></i> Mark as completed</button>\n            </div> --\x3e\n            \n            </div>\n        ` } card.innerHTML += '\n        <div class="btt-btn-container">\n                <a class="btt-button" href="#ts">Back to top</a>\n            </div>\n    ' } ref.on("value", getData);